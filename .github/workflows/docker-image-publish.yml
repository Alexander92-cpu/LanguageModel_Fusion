name: Docker Image CI

on:
  schedule:
    - cron: "0 10 * * *"
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PROJECT_IN_DOCKER: /app

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - id: lower_repo
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_NAME }}
      
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      
      - name: Remove unnecessary files
        run: |
            sudo rm -rf /opt/ghc
            sudo rm -rf "/usr/local/share/boost"
            sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.3.0
      - name: Check install!
        run: cosign version

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha          

      # Build and load Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and load Docker image
        id: build-and-load
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ steps.lower_repo.outputs.lowercase }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Run pylint inside the Docker container
      - name: Run pylint
        run: |
          docker run --rm -v .:${{ env.PROJECT_IN_DOCKER }} ${{ steps.meta.outputs.tags }} pylint *.py */*.py

      # Run pytest inside the Docker container
      - name: Run pytest
        run: |
          docker run --rm -v .:${{ env.PROJECT_IN_DOCKER }} ${{ steps.meta.outputs.tags }} pytest

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
